apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: example-ingress
    labels:
      app: example
    annotations:
  spec:
    rules:
      - host: app.example.com
        http:
          paths:
            - path: /
              backend:
                serviceName: example-svc
                servicePort: 80
    tls:
- apiVersion: v1
  kind: Service
  metadata:
    name: example-svc
    labels:
      app: example
  spec:
    ports:
    - name: http
      port: 9000
      targetPort: http
    selector:
      app: example
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: nginx-svc
    labels:
      app: nginx
  spec:
    ports:
    - name: http
      port: 80
      targetPort: http
    selector:
      app: nginx
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: example-configmap
    labels:
      app: example
  data:
    config.ini: |-
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: example-data-pvc
    annotations: {}
    labels:
      app: example
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: example-deployment
    labels:
      app: example
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: example
      spec:
        containers:
        - name: example
          image: bitnami/php-example:0.0.1
          ports:
          - containerPort: 9000
            name: http
          volumeMounts:
          - mountPath: /app/config.ini
            name: example-config
            subPath: config.ini
          - mountPath: /app/data
            name: example-data
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 5
        restartPolicy: Always
        volumes:
        - name: example-config
          configMap:
            name: example-configmap
        - name: example-data
          persistentVolumeClaim:
            claimName: example-data-pvc
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: nginx-deployment
    labels:
      app: nginx
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: nginx
      spec:
        containers:
        - name: nginx
          image: bitnami/nginx:latest
          ports:
          - containerPort: 8080
            name: http
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
          - name: nginx-vhost
            mountPath: /bitnami/nginx/conf/vhosts
        volumes:
        - name: nginx-vhost
          configMap:
            name: nginx-configmap
        restartPolicy: Always
  status: {}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: nginx-configmap
    labels:
      app: nginx
  data:
    myapp.conf: |-
      server {
        listen 0.0.0.0:8080;
        server_name myapp.com;

        root /app;

        location / {
          try_files $uri $uri/index.php;
        }

        location ~ \.php$ {
          # fastcgi_pass example-svc:9000;
          fastcgi_pass example-svc:9000;
          fastcgi_index index.php;
          include fastcgi.conf;
        }
      }
kind: List
metadata: {}
